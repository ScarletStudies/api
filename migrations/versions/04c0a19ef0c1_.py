"""initial migration

Revision ID: 04c0a19ef0c1
Revises: 
Create Date: 2018-05-21 14:52:00.231133

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '04c0a19ef0c1'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('category',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=32), nullable=False),
                    sa.PrimaryKeyConstraint('id', name=op.f('pk_category'))
                    )
    op.create_table('course',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=128), nullable=False),
                    sa.Column('offering_unit', sa.String(
                        length=8), nullable=False),
                    sa.Column('subject', sa.String(length=8), nullable=False),
                    sa.Column('course_number', sa.String(
                        length=8), nullable=False),
                    sa.PrimaryKeyConstraint('id', name=op.f('pk_course'))
                    )
    op.create_table('semester',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('year', sa.Integer(), nullable=False),
                    sa.Column('season', sa.String(length=16), nullable=False),
                    sa.PrimaryKeyConstraint('id', name=op.f('pk_semester'))
                    )
    op.create_table('user',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('email', sa.String(length=128), nullable=False),
                    sa.Column('password', sa.String(
                        length=256), nullable=False),
                    sa.Column('is_verified', sa.Boolean(), nullable=False),
                    sa.PrimaryKeyConstraint('id', name=op.f('pk_user')),
                    sa.UniqueConstraint('email', name=op.f('uq_user_email'))
                    )
    op.create_table('post',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('title', sa.Text(), nullable=False),
                    sa.Column('content', sa.Text(), nullable=False),
                    sa.Column('timestamp', sa.DateTime(), server_default=sa.text(
                        'CURRENT_TIMESTAMP'), nullable=False),
                    sa.Column('is_archived', sa.Boolean(), nullable=False),
                    sa.Column('author_id', sa.Integer(), nullable=False),
                    sa.Column('course_id', sa.Integer(), nullable=False),
                    sa.Column('semester_id', sa.Integer(), nullable=False),
                    sa.Column('category_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['author_id'], ['user.id'], name=op.f('fk_post_author_id_user')),
                    sa.ForeignKeyConstraint(['category_id'], ['category.id'], name=op.f(
                        'fk_post_category_id_category')),
                    sa.ForeignKeyConstraint(
                        ['course_id'], ['course.id'], name=op.f('fk_post_course_id_course')),
                    sa.ForeignKeyConstraint(['semester_id'], ['semester.id'], name=op.f(
                        'fk_post_semester_id_semester')),
                    sa.PrimaryKeyConstraint('id', name=op.f('pk_post'))
                    )
    op.create_table('usercourses',
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('course_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['course_id'], ['course.id'], name=op.f(
                        'fk_usercourses_course_id_course')),
                    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f(
                        'fk_usercourses_user_id_user')),
                    sa.PrimaryKeyConstraint('user_id', 'course_id',
                                            name=op.f('pk_usercourses'))
                    )
    op.create_table('comment',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('content', sa.Text(), nullable=False),
                    sa.Column('timestamp', sa.DateTime(), server_default=sa.text(
                        'CURRENT_TIMESTAMP'), nullable=False),
                    sa.Column('post_id', sa.Integer(), nullable=False),
                    sa.Column('author_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['author_id'], ['user.id'], name=op.f('fk_comment_author_id_user')),
                    sa.ForeignKeyConstraint(
                        ['post_id'], ['post.id'], name=op.f('fk_comment_post_id_post')),
                    sa.PrimaryKeyConstraint('id', name=op.f('pk_comment'))
                    )
    op.create_table('userpostcheers',
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('post_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['post_id'], ['post.id'], name=op.f(
                        'fk_userpostcheers_post_id_post')),
                    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f(
                        'fk_userpostcheers_user_id_user')),
                    sa.PrimaryKeyConstraint('user_id', 'post_id',
                                            name=op.f('pk_userpostcheers'))
                    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('userpostcheers')
    op.drop_table('comment')
    op.drop_table('usercourses')
    op.drop_table('post')
    op.drop_table('user')
    op.drop_table('semester')
    op.drop_table('course')
    op.drop_table('category')
    # ### end Alembic commands ###
